<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://xmlns.jcp.org/jsf/html"
      xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
      xmlns:f="http://xmlns.jcp.org/jsf/core"
      xmlns:p="http://primefaces.org/ui">
<h:head>
    <title>Product List</title>
    <!-- Bootstrap -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet"/>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css"/>
    <style>
        /* Горизонтальный скролл для таблицы */
        .table-container {
            overflow-x: auto; /* Включаем прокрутку */
            -webkit-overflow-scrolling: touch; /* Для поддержки на мобильных устройствах */
        }

        table {
            width: 100%; /* Таблица должна заполнять весь доступный контейнер */
            min-width: 1200px; /* Устанавливаем минимальную ширину, чтобы убедиться, что таблица достаточно широкая для прокрутки */
            table-layout: auto; /* Автоматическое распределение колонок */
        }

        th, td {
            white-space: nowrap; /* Запрещаем перенос строк в ячейках */
        }
    </style>
</h:head>
<h:body class="bg-light">
    <div class="mt-4">

        <!-- Header Section -->
        <div class="container">
            <header class="d-flex justify-content-between align-items-center mb-4">
                <h:link outcome="main_page.xhtml" class="text-dark">
                    <h1>IS lab 1</h1>
                </h:link>
                <!-- Centered Buttons -->
                <div class="d-flex justify-content-center flex-grow-1">
                    <h:form styleClass="mx-2">
                        <h:button value="Do operations" outcome="operations.xhtml" styleClass="btn btn-dark btn-sm"/>
                    </h:form>
                    <h:form styleClass="mx-2">
                        <h:commandButton value="Add Product"
                                         action="#{productController.resetFields}"
                                         styleClass="btn btn-dark btn-sm"
                                         rendered="#{userBean.user != null}"/>
                    </h:form>


                    <!-- Отображение кнопки только если у пользователя нет роли ADMIN -->
                    <h:form styleClass="mx-2">
                        <h:commandButton value="Request Admin Rights" action="#{userBean.requestAdminRights}"
                                         styleClass="btn btn-dark btn-sm" rendered="#{userBean.user.role eq 'USER'}"/>
                    </h:form>

                    <!-- Add Admin button for ADMIN role -->
                    <h:form rendered="#{userBean.user.role eq 'ADMIN'}">
                        <h:button value="Add Admin" outcome="admin-requests.xhtml" styleClass="btn btn-warning btn-sm"/>
                    </h:form>
                </div>

                <!-- User Info and Log In/Out -->
                <div class="d-flex align-items-center">
                    <!-- Display Username if Logged In -->
                    <h:outputText value="#{userBean.loggedIn ? userBean.user.login : ''}"
                                  rendered="#{userBean.loggedIn}"
                                  styleClass="me-2 text-secondary"/>

                    <!-- Отображаем роль пользователя, если он ADMIN -->
                    <h:outputText value=" (ADMIN) " rendered="#{userBean.user.role eq 'ADMIN'}"
                                  styleClass="me-2 text-warning"/>

                    <h:form>
                        <h:commandButton value="#{userBean.loggedIn ? 'Log Out' : 'Log In'}"
                                         action="#{userBean.loginRedirect}"
                                         styleClass="btn btn-dark btn-sm"/>
                    </h:form>
                </div>
            </header>
        </div>

        <div class="table shadow-sm">
            <!-- Data Table -->
            <p:dataTable id="dataTableId" value="#{productBean.products}" var="product" paginator="true" rows="10"
                         rowsPerPageTemplate="5,10,15" editable="true" styleClass="table table-bordered table-hover"
                         style="table-layout: auto" paginatorPosition="bottom">

                <!-- Колонки с атрибутами сущности Product -->
                <p:column style="width: 2%">
                    <f:facet name="header">
                        Id
                        <h:commandButton value="#{productBean.sortOrderId ? '↓' : '↑'}" action="#{productBean.sortById}">
                            <f:ajax execute="@form" render="dataTableId"/>
                        </h:commandButton>
                    </f:facet>
                    #{product.id}
                </p:column>

                <!--                        <p>-->
                <!--                            <p:inputText value="#{productBean.nameFilter}" placeholder="Filter"-->
                <!--                                         style="width: 100%">-->
                <!--                                <p:ajax event="keyup" update="dataTableId nameColumn"/>-->
                <!--                            </p:inputText>-->
                <!--                        </p>-->

                <p:column style="width: 4%">
                    <f:facet name="header">
                        Name
                        <h:commandButton value="#{productBean.sortOrderName ? '↓' : '↑'}" action="#{productBean.sortByName}">
                            <f:ajax execute="@form" render="dataTableId" />
                        </h:commandButton>
                    </f:facet>
                    #{product.name}
                </p:column>

                <p:column style="width: 6%" headerText="Coordinates">
                    X: #{product.coordinates.x}, Y: #{product.coordinates.y}
                </p:column>

                <p:column style="width: 8%">
                    <f:facet name="header">
                        Creation Date
                        <h:commandButton value="#{productBean.sortOrderDate ? '↓' : '↑'}" action="#{productBean.sortByDate}">
                            <f:ajax execute="@form" render="dataTableId" />
                        </h:commandButton>
                    </f:facet>
                    #{product.creationDate}
                </p:column>

                <p:column style="width: 8%" headerText="Unit of Measure">
                    #{product.unitOfMeasure}
                </p:column>

                <p:column style="width: 7%" headerText="Manufacturer ID">
                    <h:commandLink value="#{product.manufacturer.id}" action="#{productBean.loadManufacturer}">
                        <f:setPropertyActionListener target="#{productBean.manufacturerId}"
                                                     value="#{product.manufacturer.id}"/>
                        <f:ajax execute="@form" render="manufactureTable addressTable"
                                update="manufactureTable addressTable"/>
                    </h:commandLink>
                </p:column>

                <p:column style="width: 4%">
                    <f:facet name="header">
                        Price
                        <h:commandButton value="#{productBean.sortOrderPrice ? '↓' : '↑'}" action="#{productBean.sortByPrice}">
                            <f:ajax execute="@form" render="dataTableId" />
                        </h:commandButton>
                    </f:facet>
                    #{product.price}
                </p:column>

                <p:column style="width: 10%">
                    <f:facet name="header">
                        Manufacture Cost
                        <h:commandButton value="#{productBean.sortOrderManufactureCost ? '↓' : '↑'}" action="#{productBean.sortByManufactureCost}">
                            <f:ajax execute="@form" render="dataTableId" />
                        </h:commandButton>
                    </f:facet>
                    #{product.manufactureCost}
                </p:column>

                <p:column style="width: 5%">
                    <f:facet name="header">
                        Rating
                        <h:commandButton value="#{productBean.sortOrderRating ? '↓' : '↑'}" action="#{productBean.sortByRating}">
                            <f:ajax execute="@form" render="dataTableId" />
                        </h:commandButton>
                    </f:facet>
                    #{product.rating}
                </p:column>

                <p:column style="width: 6%" headerText="Part Number">
                    #{product.partNumber}
                </p:column>

                <p:column style="width: 3%" headerText="OwnerId">
                    <h:commandLink value="#{product.owner.id}" action="#{productBean.loadOwner()}">
                        <f:setPropertyActionListener target="#{productBean.ownerId}"
                                                     value="#{product.owner.id}"/>
                        <f:ajax execute="@form" render="ownerTable locationTable" update="ownerTable locationTable"/>
                    </h:commandLink>
                </p:column>
                <p:column style="width: 4%" headerText="CreatedBy">
                    #{product.user.login}
                </p:column>

                <!-- Actions -->
                <p:column headerText="Actions">
                    <h:form>
                        <!-- Удаление доступно только для владельца продукта -->
                        <h:commandButton value="Delete" action="#{productBean.delete}"
                                         styleClass="btn btn-danger btn-sm"
                                         rendered="#{product.user.id eq userBean.user.id or userBean.user.role eq 'ADMIN'}">
                            <f:setPropertyActionListener target="#{productBean.idToDelete}" value="#{product.id}"/>
                        </h:commandButton>

                        <!-- Редактирование доступно только для владельца продукта или если пользователь - ADMIN -->
                        <h:commandButton value="Edit" action="#{productController.loadProductFromRequest}"
                                         styleClass="btn btn-primary btn-sm"
                                         rendered="#{product.user.id eq userBean.user.id or userBean.user.role eq 'ADMIN'}">
                            <f:setPropertyActionListener target="#{productController.idToDelete}"
                                                         value="#{product.id}"/>
                        </h:commandButton>

                    </h:form>
                </p:column>
            </p:dataTable>
        </div>

        <div class="container">

            <p>Manufacturer</p>
            <p:dataTable id="manufactureTable" value="#{productBean.manufacturer}" var="manufacturerDetails"
                         styleClass="table table-bordered table-hover">
                <p:column headerText="Id">
                    <h:outputText value="#{manufacturerDetails.id}"/>
                </p:column>
                <p:column headerText="Name">
                    <h:outputText value="#{manufacturerDetails.name}"/>
                </p:column>
                <p:column headerText="OfficialAddressId">
                    <h:outputText value="#{manufacturerDetails.officialAddress.id}"/>
                </p:column>
                <p:column headerText="AnnualTurnover">
                    <h:outputText value="#{manufacturerDetails.annualTurnover}"/>
                </p:column>
                <p:column headerText="EmployeesCount">
                    <h:outputText value="#{manufacturerDetails.employeesCount}"/>
                </p:column>
                <p:column headerText="FullName">
                    <h:outputText value="#{manufacturerDetails.fullName}"/>
                </p:column>
                <p:column headerText="Type">
                    <h:outputText value="#{manufacturerDetails.type}"/>
                </p:column>
            </p:dataTable>

            <p>Manufacturer:Address</p>
            <p:dataTable id="addressTable" value="#{productBean.address}" var="addressDetails"
                         styleClass="table table-bordered table-hover">
                <p:column headerText="Id">
                    <h:outputText value="#{addressDetails.id}"/>
                </p:column>
                <p:column headerText="Street">
                    <h:outputText value="#{addressDetails.street}"/>
                </p:column>
                <p:column headerText="ZipCode">
                    <h:outputText value="#{addressDetails.zipCode}"/>
                </p:column>
            </p:dataTable>

            <p>Owner</p>
            <p:dataTable id="ownerTable" value="#{productBean.owner}" var="ownerDetails"
                         styleClass="table table-bordered table-hover">
                <p:column headerText="Id">
                    <h:outputText value="#{ownerDetails.id}"/>
                </p:column>
                <p:column headerText="Name">
                    <h:outputText value="#{ownerDetails.name}"/>
                </p:column>
                <p:column headerText="EyeColor">
                    <h:outputText value="#{ownerDetails.eyeColor}"/>
                </p:column>
                <p:column headerText="HairColor">
                    <h:outputText value="#{ownerDetails.hairColor}"/>
                </p:column>
                <p:column headerText="LocationId">
                    <h:outputText value="#{ownerDetails.location.id}"/>
                </p:column>
                <p:column headerText="Weight">
                    <h:outputText value="#{ownerDetails.weight}"/>
                </p:column>
                <p:column headerText="Nationality">
                    <h:outputText value="#{ownerDetails.nationality}"/>
                </p:column>
            </p:dataTable>

            <p>Owner:Location</p>
            <p:dataTable id="locationTable" value="#{productBean.location}" var="locationDetails"
                         styleClass="table table-bordered table-hover">
                <p:column headerText="Id">
                    <h:outputText value="#{locationDetails.id}"/>
                </p:column>
                <p:column headerText="X">
                    <h:outputText value="#{locationDetails.x}"/>
                </p:column>
                <p:column headerText="Y">
                    <h:outputText value="#{locationDetails.y}"/>
                </p:column>
                <p:column headerText="Z">
                    <h:outputText value="#{locationDetails.z}"/>
                </p:column>
                <p:column headerText="Name">
                    <h:outputText value="#{locationDetails.name}"/>
                </p:column>

            </p:dataTable>
        </div>
    </div>

    <script>
        const socket = new WebSocket("ws://localhost:32001/lab1/updates");

        socket.onopen = function () {
            console.log("Connected to WebSocket server");
        };

        socket.onmessage = function (event) {
            console.log("Message from server: " + event.data);
            // Обновить данные на странице (например, перезагрузить таблицу)
            refreshProductTable();
        };

        socket.onclose = function () {
            console.log("Disconnected from WebSocket server");
        };

        socket.onerror = function (error) {
            console.error("WebSocket error: " + error);
        };

        // Функция для обновления таблицы
        function refreshProductTable() {
            // Получить обновленные данные с сервера, например, перезагрузив список продуктов
            // fetch('/yourApp/products')
            //     .then(response => response.json())
            //     .then(products => {
            //         // Перерисовать таблицу с новыми данными
            //         const tableBody = document.getElementById("product-table-body");
            //         tableBody.innerHTML = ""; // Очистить таблицу
            //         products.forEach(product => {
            //             const row = document.createElement("tr");
            //             row.innerHTML = `
            //         <td>${product.name}</td>
            //         <td>${product.price}</td>
            //         <td>${product.manufacturer}</td>
            //         <td>${product.owner}</td>
            //     `;
            //             tableBody.appendChild(row);
            //         });
            //     });
            console.log("refreshTableFunc")
            location.reload();
        }

    </script>
</h:body>
</html>
